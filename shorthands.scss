// one line flex container
@mixin flex($align: center, $justify: center, $direction: column, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  gap: $gap;
}

// as items are added, they add columns which take equal space and full height, up to $max-width,
// then they will be added on another row, then the height should fall back to $min-height.
@mixin auto-grid($min-width: 250px, $min-height: 250px, $column-gap: 50px, $row-gap: 50px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  grid-auto-rows: minmax($min-height, 1fr);

  column-gap: $column-gap;
  row-gap: $row-gap;

  & > * {
    width: 100%;
  }
}

// one line absolute position
@mixin absolute-position(
  $top: unset,
  $left: unset,
  $bottom: unset,
  $right: unset
) {
  position: absolute;
  top: $top;
  left: $left;
  bottom: $bottom;
  right: $right;

  // only include this if using the on-rtl mixin!
  @include on-rtl {
    left: $right;
    right: $left;
  }
}

// styling a scrollbar
@mixin with-scrollbar(
  $width: 8px,
  $height: unset,
  $color: #e4e8ec,
  $trackColor: transparent,
  $trackInlinePad: 0,
  $trackBlockPad: 0,
  $padOppositeSide: false
) {
  padding-inline-end: $trackInlinePad;
  margin-inline-end: $trackInlinePad;

  @if $padOppositeSide {
    margin-inline-start: $width + 2 * $trackInlinePad;
  }

  &::-webkit-scrollbar {
    display: unset;
    width: $width;
    height: $height;
  }

  &::-webkit-scrollbar-track {
    background-color: $trackColor;
    border-radius: 20px;
    @include margin-block($trackBlockPad);
  }

  &::-webkit-scrollbar-thumb {
    background-color: $color;
    border-radius: 20px;
  }
}
